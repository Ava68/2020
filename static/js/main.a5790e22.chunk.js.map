{"version":3,"sources":["images/developers.png","images/design.png","images/curation.png","images/query-management.png","images/sponsors.png","images/organizers.png","images/cover.png","images/cover-mobile.png","components/Navbar.js","components/Card.js","components/Teams.js","components/Speakers.js","components/LoadComp.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","className","style","position","top","bottom","width","to","Component","Card","props","onClick","document","getElementById","name","display","src","source","alt","id","class","Teams","organizer","sponsor","curation","design","developers","query","Speakers","Load","useState","isMobile","setIsMobile","useEffect","window","outerWidth","coverImageMobile","coverImageLarge","xmlns","fill","viewBox","height","marginRight","d","Home","lazy","App","fallback","Loading","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a5790e22.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/developers.5816b350.png\";","module.exports = __webpack_public_path__ + \"static/media/design.fdcee3b3.png\";","module.exports = __webpack_public_path__ + \"static/media/curation.c4ffd9b4.png\";","module.exports = __webpack_public_path__ + \"static/media/query-management.30be24e2.png\";","module.exports = __webpack_public_path__ + \"static/media/sponsors.8734fb7d.png\";","module.exports = __webpack_public_path__ + \"static/media/organizers.7b9096cd.png\";","module.exports = __webpack_public_path__ + \"static/media/cover.1173d4f9.png\";","module.exports = __webpack_public_path__ + \"static/media/cover-mobile.723b153e.png\";","import React, { Component } from \"react\";\nimport \"../Navbar.css\";\nimport { NavLink } from \"react-router-dom\";\n\n\nclass Navbar extends Component {\n    render() {\n        return (\n            <div>\n\n                <div className=\"pivot_menu primary_white small0\" style={{position: \"fixed\", top: \"0px\", bottom: \"0px\", width: \"80px\"}}>\n                    <br /><br /><br /><br /><br /><br />\n                    <br /><br /><br /><br /><br />\n                    <NavLink to=\"/speakers\" className=\"pivot_button\">\n                        <i className=\"ms-Icon ms-Icon--FavoriteStarFill icon-large\"></i>\n                    </NavLink><br /><br />\n                    <NavLink to=\"/teams\" className=\"pivot_button\">\n                        <i className=\"ms-Icon ms-Icon--TeamsLogo icon-large\"></i>\n                    </NavLink><br /><br />\n                    <NavLink to=\"/faqs\" className=\"pivot_button\">\n                        <i className=\"ms-Icon ms-Icon--Contact icon-large\"></i>\n                    </NavLink><br /><br />\n                    <NavLink to=\"/coc\" className=\"pivot_button\">\n                        <i className=\"ms-Icon ms-Icon--AirplaneSolid icon-large\"></i>\n                    </NavLink>\n                </div>\n\n                <div className=\"bottom_nav large0 medium0\">\n                    <NavLink to=\"/speakers\" className=\"primary_white\">\n                        <i className=\"ms-Icon ms-Icon--FavoriteStarFill icon-large\"></i>\n                    </NavLink>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                    <NavLink to=\"/team\" className=\"primary_white\">\n                        <i className=\"ms-Icon ms-Icon--TeamsLogo icon-large\"></i>\n                    </NavLink>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                    <NavLink to=\"/faqs\" className=\"primary_white\">\n                        <i className=\"ms-Icon ms-Icon--Contact icon-large\"></i>\n                    </NavLink>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                    <NavLink to=\"/coc\" className=\"primary_white\">\n                        <i className=\"ms-Icon ms-Icon--AirplaneSolid icon-large\"></i>\n                    </NavLink>\n                </div>\n\n            </div>\n        );\n    }\n}\n\nexport default Navbar;","import React from \"react\";\n\nfunction Card(props) {\n  const openmod1 = () => {\n    document.getElementById(props.name).style.display = \"Block\";\n  };\n  const closemod1 = () => {\n    document.getElementById(props.name).style.display = \"None\";\n  };\n\n  return (\n    <>\n      <div\n        className=\"column large4 medium4 small12 team-card\"\n        onClick={openmod1}\n      >\n        <img src={props.source} alt=\"\" />\n        <p>{props.name}</p>\n      </div>\n      <div className=\"modal_container\" id={props.name}>\n        <div className=\"modal_content zi3\">\n          <div className=\"dialogue_pane large12\">\n            <div className=\"modal_title left\">{props.name}</div>\n            <button\n              class=\"primary_red right ta_center mod_close_btn\"\n              onClick={closemod1}\n            >\n              X\n            </button>\n          </div>\n          <div class=\"page_container\">\n            <h2>{props.name}</h2>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Card;\n","import React from \"react\";\nimport \"../css/Teams.css\";\nimport developers from \"../images/developers.png\";\nimport design from \"../images/design.png\";\nimport curation from \"../images/curation.png\";\nimport query from \"../images/query-management.png\";\nimport sponsor from \"../images/sponsors.png\";\nimport organizer from \"../images/organizers.png\";\nimport Card from \"./Card\";\n\nfunction Teams() {\n  return (\n    <div className=\"teams\">\n      <h1>The Crew</h1>\n      <div>\n        <Card source={organizer} name=\"Organizing Crew\" />\n        <Card source={sponsor} name=\"Sponsorship Crew\" />\n        <Card source={curation} name=\"Curation Crew\" />\n        <Card source={design} name=\"Design Crew\" />\n        <Card source={developers} name=\"Development Crew\" />\n        <Card source={query} name=\"Query Management Crew\" />\n      </div>\n    </div>\n  );\n}\n\nexport default Teams;\n","import React from \"react\";\nimport Card from \"./Card\";\nimport developers from \"../images/developers.png\";\nimport design from \"../images/design.png\";\nimport curation from \"../images/curation.png\";\nimport query from \"../images/query-management.png\";\nimport sponsor from \"../images/sponsors.png\";\nimport organizer from \"../images/organizers.png\";\n\nfunction Speakers() {\n  return (\n    <div className=\"teams\">\n      <h1>Speaker</h1>\n      <div>\n        <Card source={developers} name=\"Developers\" />\n        <Card source={design} name=\"Design\" />\n        <Card source={curation} name=\"Curation\" />\n        <Card source={query} name=\"Query Management\" />\n        <Card source={organizer} name=\"Organizers\" />\n        <Card source={sponsor} name=\"sponsors\" />\n      </div>\n      <button className=\"primary_blue small\">CALL FOR SPEAKERS</button>\n      <br /><br />\n    </div>\n  );\n}\n\nexport default Speakers;\n","import React, { useState, useEffect } from \"react\";\nimport coverImageLarge from \"../images/cover.png\";\nimport coverImageMobile from \"../images/cover-mobile.png\";\nimport \"../css/Cover.css\";\n\nconst Load = () => {\n  // const [mode, setMode] = useState(\"dark\");\n  const [isMobile, setIsMobile] = useState(false);\n\n  useEffect(() => {\n    if (window.outerWidth <= 768) setIsMobile(true);\n  }, [isMobile]);\n\n  return (\n    <div\n      className=\"cover\"\n      // style={\n      //   mode === \"dark\"\n      //     ? { backgroundColor: \" #1e1e1e\" }\n      //     : { backgroundColor: \"#fcfcfc\" }\n      // }\n    >\n      {/* <div\n        class=\"custom-control custom-switch\"\n        style={{ position: \"absolute\" }}\n      >\n        <input\n          type=\"checkbox\"\n          class=\"custom-control-input\"\n          id=\"customSwitch1\"\n        />\n        <label\n          class=\"custom-control-label\"\n          for=\"customSwitch1\"\n          onClick={() => {\n            mode === \"dark\" ? setMode(\"light\") : setMode(\"light\");\n            mode === \"light\" ? setMode(\"dark\") : setMode(\"light\");\n          }}\n          style={mode === \"dark\" ? { color: \" #fcfcfc\" } : { color: \"#1e1e1e\" }}\n        >\n          Light\n        </label>\n      </div> */}\n\n      {isMobile? <img src={coverImageMobile} alt=\"\" /> : <img src={coverImageLarge} alt=\"\" />}\n\n      <button id=\"devfolio-apply-now\" className=\"devfolio-btn\">\n        <svg\n          class=\"logo\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          fill=\"#fff\"\n          viewBox=\"0 0 115.46 123.46\"\n          style={{ height: \"24px\", width: \"24px\", marginRight: \"8px\" }}\n        >\n          <path d=\"M115.46 68a55.43 55.43 0 0 1-50.85 55.11S28.12 124 16 123a12.6 12.6 0 0 1-10.09-7.5 15.85 15.85 0 0 0 5.36 1.5c4 .34 10.72.51 20.13.51 13.82 0 28.84-.38 29-.38h.26a60.14 60.14 0 0 0 54.72-52.47c.05 1.05.08 2.18.08 3.34z\" />\n          <path d=\"M110.93 55.87A55.43 55.43 0 0 1 60.08 111s-36.48.92-48.58-.12C5 110.29.15 104.22 0 97.52l.2-83.84C.38 7 5.26.94 11.76.41c12.11-1 48.59.12 48.59.12a55.41 55.41 0 0 1 50.58 55.34z\" />\n        </svg>\n        Apply with Devfolio\n      </button>\n    </div>\n  );\n}\n\nexport default Load;\n","import React, { Component, Suspense, lazy } from \"react\";\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport Navbar from \"./components/Navbar\";\nimport Teams from \"./components/Teams\";\nimport Speakers from \"./components/Speakers\";\nimport Loading from \"./components/LoadComp\";\nimport \"fdweb/fluent.css\";\nimport \"fdweb/fluent-icons.css\";\nimport \"./App.css\";\n\nconst Home = lazy(() =>import(\"./components/HomeComp\"));\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <Suspense fallback={Loading}>\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route path=\"/speakers\" component={Speakers} />\n            <Route path=\"/teams\" component={Teams} />\n            <Route path=\"/coc\" component={Home} />\n          </Switch>\n          <Navbar />\n        </Suspense>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}