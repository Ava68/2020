{"version":3,"sources":["images/developers.png","images/design.png","images/curation.png","images/query-management.png","images/sponsors.png","images/organizers.png","images/cover.png","images/cover-mobile.png","components/Navbar.js","components/Card.js","components/Teams.js","components/Speakers.js","components/LoadComp.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","className","style","position","top","bottom","width","to","Component","Card","props","onClick","document","getElementById","name","display","src","source","alt","id","class","Teams","organizer","sponsor","curation","design","developers","query","Speakers","Load","useState","isMobile","setIsMobile","useEffect","window","outerWidth","coverImageMobile","coverImageLarge","xmlns","fill","viewBox","height","marginRight","d","Home","lazy","App","fallback","Loading","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"0GAAAA,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,8C,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,qBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,uQC+C5BC,G,6KAxCP,OACI,6BAEI,yBAAKC,UAAU,kCAAkCC,MAAO,CAACC,SAAU,QAASC,IAAK,MAAOC,OAAQ,MAAOC,MAAO,SAC1G,6BAAM,6BAAM,6BAAM,6BAAM,6BAAM,6BAC9B,6BAAM,6BAAM,6BAAM,6BAAM,6BACxB,kBAAC,IAAD,CAASC,GAAG,YAAYN,UAAU,gBAC9B,uBAAGA,UAAU,kDACP,6BAAM,6BAChB,kBAAC,IAAD,CAASM,GAAG,SAASN,UAAU,gBAC3B,uBAAGA,UAAU,2CACP,6BAAM,6BAChB,kBAAC,IAAD,CAASM,GAAG,QAAQN,UAAU,gBAC1B,uBAAGA,UAAU,yCACP,6BAAM,6BAChB,kBAAC,IAAD,CAASM,GAAG,OAAON,UAAU,gBACzB,uBAAGA,UAAU,gDAIrB,yBAAKA,UAAU,6BACX,kBAAC,IAAD,CAASM,GAAG,YAAYN,UAAU,iBAC9B,uBAAGA,UAAU,kDAFrB,2BAII,kBAAC,IAAD,CAASM,GAAG,QAAQN,UAAU,iBAC1B,uBAAGA,UAAU,2CALrB,2BAOI,kBAAC,IAAD,CAASM,GAAG,QAAQN,UAAU,iBAC1B,uBAAGA,UAAU,yCARrB,2BAUI,kBAAC,IAAD,CAASM,GAAG,OAAON,UAAU,iBACzB,uBAAGA,UAAU,qD,GAjChBO,c,8GCkCNC,MArCf,SAAcC,GAQZ,OACE,oCACE,yBACET,UAAU,0CACVU,QAXW,WACfC,SAASC,eAAeH,EAAMI,MAAMZ,MAAMa,QAAU,UAYhD,yBAAKC,IAAKN,EAAMO,OAAQC,IAAI,KAC5B,2BAAIR,EAAMI,OAEZ,yBAAKb,UAAU,kBAAkBkB,GAAIT,EAAMI,MACzC,yBAAKb,UAAU,qBACb,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,oBAAoBS,EAAMI,MACzC,4BACEM,MAAM,4CACNT,QAnBM,WAChBC,SAASC,eAAeH,EAAMI,MAAMZ,MAAMa,QAAU,SAgB5C,MAOF,yBAAKK,MAAM,kBACT,4BAAKV,EAAMI,WCLRO,MAhBf,WACE,OACE,yBAAKpB,UAAU,SACb,wCACA,6BACE,kBAAC,EAAD,CAAMgB,OAAQK,IAAWR,KAAK,oBAC9B,kBAAC,EAAD,CAAMG,OAAQM,IAAST,KAAK,qBAC5B,kBAAC,EAAD,CAAMG,OAAQO,IAAUV,KAAK,kBAC7B,kBAAC,EAAD,CAAMG,OAAQQ,IAAQX,KAAK,gBAC3B,kBAAC,EAAD,CAAMG,OAAQS,IAAYZ,KAAK,qBAC/B,kBAAC,EAAD,CAAMG,OAAQU,IAAOb,KAAK,6BCOnBc,MAlBf,WACE,OACE,yBAAK3B,UAAU,SACb,uCACA,6BACE,kBAAC,EAAD,CAAMgB,OAAQS,IAAYZ,KAAK,eAC/B,kBAAC,EAAD,CAAMG,OAAQQ,IAAQX,KAAK,WAC3B,kBAAC,EAAD,CAAMG,OAAQO,IAAUV,KAAK,aAC7B,kBAAC,EAAD,CAAMG,OAAQU,IAAOb,KAAK,qBAC1B,kBAAC,EAAD,CAAMG,OAAQK,IAAWR,KAAK,eAC9B,kBAAC,EAAD,CAAMG,OAAQM,IAAST,KAAK,cAE9B,4BAAQb,UAAU,sBAAlB,qBACA,6BAAM,+B,0CCyCG4B,G,MA1DF,WAAM,MAEeC,oBAAS,GAFxB,mBAEVC,EAFU,KAEAC,EAFA,KAQjB,OAJAC,qBAAU,WACJC,OAAOC,YAAc,KAAKH,GAAY,KACzC,CAACD,IAGF,yBACE9B,UAAU,SA6BT8B,EAAU,yBAAKf,IAAKoB,IAAkBlB,IAAI,KAAQ,yBAAKF,IAAKqB,IAAiBnB,IAAI,KAElF,4BAAQC,GAAG,qBAAqBlB,UAAU,gBACxC,yBACEmB,MAAM,OACNkB,MAAM,6BACNC,KAAK,OACLC,QAAQ,oBACRtC,MAAO,CAAEuC,OAAQ,OAAQnC,MAAO,OAAQoC,YAAa,QAErD,0BAAMC,EAAE,gOACR,0BAAMA,EAAE,uLATZ,0BCpCAC,G,kBAAOC,gBAAK,kBAAK,iCAoBRC,E,uKAhBX,OACE,kBAAC,IAAD,KACE,kBAAC,WAAD,CAAUC,SAAUC,GAClB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWP,IACjC,kBAAC,IAAD,CAAOM,KAAK,YAAYC,UAAWvB,IACnC,kBAAC,IAAD,CAAOsB,KAAK,SAASC,UAAW9B,IAChC,kBAAC,IAAD,CAAO6B,KAAK,OAAOC,UAAWP,KAEhC,kBAAC,EAAD,Y,GAXQpC,aCAE4C,QACW,cAA7BlB,OAAOmB,SAASC,UAEe,UAA7BpB,OAAOmB,SAASC,UAEhBpB,OAAOmB,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAGF9C,SAASC,eAAe,SDuHpB,kBAAmB8C,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.28a01adb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/developers.5816b350.png\";","module.exports = __webpack_public_path__ + \"static/media/design.fdcee3b3.png\";","module.exports = __webpack_public_path__ + \"static/media/curation.c4ffd9b4.png\";","module.exports = __webpack_public_path__ + \"static/media/query-management.30be24e2.png\";","module.exports = __webpack_public_path__ + \"static/media/sponsors.8734fb7d.png\";","module.exports = __webpack_public_path__ + \"static/media/organizers.7b9096cd.png\";","module.exports = __webpack_public_path__ + \"static/media/cover.1173d4f9.png\";","module.exports = __webpack_public_path__ + \"static/media/cover-mobile.723b153e.png\";","import React, { Component } from \"react\";\r\nimport \"../Navbar.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\n\r\nclass Navbar extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n\r\n                <div className=\"pivot_menu primary_white small0\" style={{position: \"fixed\", top: \"0px\", bottom: \"0px\", width: \"80px\"}}>\r\n                    <br /><br /><br /><br /><br /><br />\r\n                    <br /><br /><br /><br /><br />\r\n                    <NavLink to=\"/speakers\" className=\"pivot_button\">\r\n                        <i className=\"ms-Icon ms-Icon--FavoriteStarFill icon-large\"></i>\r\n                    </NavLink><br /><br />\r\n                    <NavLink to=\"/teams\" className=\"pivot_button\">\r\n                        <i className=\"ms-Icon ms-Icon--TeamsLogo icon-large\"></i>\r\n                    </NavLink><br /><br />\r\n                    <NavLink to=\"/faqs\" className=\"pivot_button\">\r\n                        <i className=\"ms-Icon ms-Icon--Contact icon-large\"></i>\r\n                    </NavLink><br /><br />\r\n                    <NavLink to=\"/coc\" className=\"pivot_button\">\r\n                        <i className=\"ms-Icon ms-Icon--AirplaneSolid icon-large\"></i>\r\n                    </NavLink>\r\n                </div>\r\n\r\n                <div className=\"bottom_nav large0 medium0\">\r\n                    <NavLink to=\"/speakers\" className=\"primary_white\">\r\n                        <i className=\"ms-Icon ms-Icon--FavoriteStarFill icon-large\"></i>\r\n                    </NavLink>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                    <NavLink to=\"/team\" className=\"primary_white\">\r\n                        <i className=\"ms-Icon ms-Icon--TeamsLogo icon-large\"></i>\r\n                    </NavLink>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                    <NavLink to=\"/faqs\" className=\"primary_white\">\r\n                        <i className=\"ms-Icon ms-Icon--Contact icon-large\"></i>\r\n                    </NavLink>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                    <NavLink to=\"/coc\" className=\"primary_white\">\r\n                        <i className=\"ms-Icon ms-Icon--AirplaneSolid icon-large\"></i>\r\n                    </NavLink>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navbar;","import React from \"react\";\r\n\r\nfunction Card(props) {\r\n  const openmod1 = () => {\r\n    document.getElementById(props.name).style.display = \"Block\";\r\n  };\r\n  const closemod1 = () => {\r\n    document.getElementById(props.name).style.display = \"None\";\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"column large4 medium4 small12 team-card\"\r\n        onClick={openmod1}\r\n      >\r\n        <img src={props.source} alt=\"\" />\r\n        <p>{props.name}</p>\r\n      </div>\r\n      <div className=\"modal_container\" id={props.name}>\r\n        <div className=\"modal_content zi3\">\r\n          <div className=\"dialogue_pane large12\">\r\n            <div className=\"modal_title left\">{props.name}</div>\r\n            <button\r\n              class=\"primary_red right ta_center mod_close_btn\"\r\n              onClick={closemod1}\r\n            >\r\n              X\r\n            </button>\r\n          </div>\r\n          <div class=\"page_container\">\r\n            <h2>{props.name}</h2>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport \"../css/Teams.css\";\r\nimport developers from \"../images/developers.png\";\r\nimport design from \"../images/design.png\";\r\nimport curation from \"../images/curation.png\";\r\nimport query from \"../images/query-management.png\";\r\nimport sponsor from \"../images/sponsors.png\";\r\nimport organizer from \"../images/organizers.png\";\r\nimport Card from \"./Card\";\r\n\r\nfunction Teams() {\r\n  return (\r\n    <div className=\"teams\">\r\n      <h1>The Crew</h1>\r\n      <div>\r\n        <Card source={organizer} name=\"Organizing Crew\" />\r\n        <Card source={sponsor} name=\"Sponsorship Crew\" />\r\n        <Card source={curation} name=\"Curation Crew\" />\r\n        <Card source={design} name=\"Design Crew\" />\r\n        <Card source={developers} name=\"Development Crew\" />\r\n        <Card source={query} name=\"Query Management Crew\" />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Teams;\r\n","import React from \"react\";\r\nimport Card from \"./Card\";\r\nimport developers from \"../images/developers.png\";\r\nimport design from \"../images/design.png\";\r\nimport curation from \"../images/curation.png\";\r\nimport query from \"../images/query-management.png\";\r\nimport sponsor from \"../images/sponsors.png\";\r\nimport organizer from \"../images/organizers.png\";\r\n\r\nfunction Speakers() {\r\n  return (\r\n    <div className=\"teams\">\r\n      <h1>Speaker</h1>\r\n      <div>\r\n        <Card source={developers} name=\"Developers\" />\r\n        <Card source={design} name=\"Design\" />\r\n        <Card source={curation} name=\"Curation\" />\r\n        <Card source={query} name=\"Query Management\" />\r\n        <Card source={organizer} name=\"Organizers\" />\r\n        <Card source={sponsor} name=\"sponsors\" />\r\n      </div>\r\n      <button className=\"primary_blue small\">CALL FOR SPEAKERS</button>\r\n      <br /><br />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Speakers;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport coverImageLarge from \"../images/cover.png\";\r\nimport coverImageMobile from \"../images/cover-mobile.png\";\r\nimport \"../css/Cover.css\";\r\n\r\nconst Load = () => {\r\n  // const [mode, setMode] = useState(\"dark\");\r\n  const [isMobile, setIsMobile] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (window.outerWidth <= 768) setIsMobile(true);\r\n  }, [isMobile]);\r\n\r\n  return (\r\n    <div\r\n      className=\"cover\"\r\n      // style={\r\n      //   mode === \"dark\"\r\n      //     ? { backgroundColor: \" #1e1e1e\" }\r\n      //     : { backgroundColor: \"#fcfcfc\" }\r\n      // }\r\n    >\r\n      {/* <div\r\n        class=\"custom-control custom-switch\"\r\n        style={{ position: \"absolute\" }}\r\n      >\r\n        <input\r\n          type=\"checkbox\"\r\n          class=\"custom-control-input\"\r\n          id=\"customSwitch1\"\r\n        />\r\n        <label\r\n          class=\"custom-control-label\"\r\n          for=\"customSwitch1\"\r\n          onClick={() => {\r\n            mode === \"dark\" ? setMode(\"light\") : setMode(\"light\");\r\n            mode === \"light\" ? setMode(\"dark\") : setMode(\"light\");\r\n          }}\r\n          style={mode === \"dark\" ? { color: \" #fcfcfc\" } : { color: \"#1e1e1e\" }}\r\n        >\r\n          Light\r\n        </label>\r\n      </div> */}\r\n\r\n      {isMobile? <img src={coverImageMobile} alt=\"\" /> : <img src={coverImageLarge} alt=\"\" />}\r\n\r\n      <button id=\"devfolio-apply-now\" className=\"devfolio-btn\">\r\n        <svg\r\n          class=\"logo\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          fill=\"#fff\"\r\n          viewBox=\"0 0 115.46 123.46\"\r\n          style={{ height: \"24px\", width: \"24px\", marginRight: \"8px\" }}\r\n        >\r\n          <path d=\"M115.46 68a55.43 55.43 0 0 1-50.85 55.11S28.12 124 16 123a12.6 12.6 0 0 1-10.09-7.5 15.85 15.85 0 0 0 5.36 1.5c4 .34 10.72.51 20.13.51 13.82 0 28.84-.38 29-.38h.26a60.14 60.14 0 0 0 54.72-52.47c.05 1.05.08 2.18.08 3.34z\" />\r\n          <path d=\"M110.93 55.87A55.43 55.43 0 0 1 60.08 111s-36.48.92-48.58-.12C5 110.29.15 104.22 0 97.52l.2-83.84C.38 7 5.26.94 11.76.41c12.11-1 48.59.12 48.59.12a55.41 55.41 0 0 1 50.58 55.34z\" />\r\n        </svg>\r\n        Apply with Devfolio\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Load;\r\n","import React, { Component, Suspense, lazy } from \"react\";\r\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport Teams from \"./components/Teams\";\r\nimport Speakers from \"./components/Speakers\";\r\nimport Loading from \"./components/LoadComp\";\r\nimport \"fdweb/fluent.css\";\r\nimport \"fdweb/fluent-icons.css\";\r\nimport \"./App.css\";\r\n\r\nconst Home = lazy(() =>import(\"./components/HomeComp\"));\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <Suspense fallback={Loading}>\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Home} />\r\n            <Route path=\"/speakers\" component={Speakers} />\r\n            <Route path=\"/teams\" component={Teams} />\r\n            <Route path=\"/coc\" component={Home} />\r\n          </Switch>\r\n          <Navbar />\r\n        </Suspense>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}